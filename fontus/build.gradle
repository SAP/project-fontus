plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
    id 'maven-publish'
    id 'idea'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
// Configure Auto Relocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

apply plugin: 'idea'

version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

tasks.jar.configure {
    classifier = 'default'
}

dependencies {
    implementation group: 'com.alibaba', name: 'druid', version: '1.2.5'
    implementation 'org.ow2.asm:asm:9.2'
    implementation 'org.ow2.asm:asm-commons:9.2'
    implementation 'org.ow2.asm:asm-analysis:9.2'
    implementation 'org.ow2.asm:asm-util:9.2'
    implementation 'info.picocli:picocli:4.6.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.3'
    implementation 'com.iabtcf:iabtcf-decoder:2.0.10'
    implementation 'com.iabtcf:iabtcf-extras:2.0.10'
    implementation 'com.iabtcf:iabtcf-extras-jackson:2.0.10'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.5'
    implementation 'commons-codec:commons-codec:1.15'
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'org.mutabilitydetector', name: 'asm-nonclassloadingextensions', version: '1.0-rc2'
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
    testImplementation('org.junit.jupiter:junit-jupiter-migrationsupport:5.8.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.8.2')
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation('org.xerial:sqlite-jdbc:3.16.1')
    implementation 'org.owasp.encoder:encoder:1.2.3'
    implementation 'org.owasp.encoder:encoder-jsp:1.2.3'
    implementation 'com.github.jsqlparser:jsqlparser:4.2'
    // Higher version of the sql connector breaks liquidbase with OpenMRS
    implementation 'mysql:mysql-connector-java:8.0.22'
    implementation 'com.owlike:genson:1.6'
}

apply plugin: 'java'
compileJava {options.encoding = "UTF-8"}
compileTestJava {options.encoding = "UTF-8"}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests"
            println "\t${result.successfulTestCount} succeeded\n" +
                    "\t${result.failedTestCount} failed\n" +
                    "\t${result.skippedTestCount} skipped"
        }
    }
}


task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "com.sap.fontus.shadow" // Default value is "shadow"
}

shadowJar {
    mergeServiceFiles()
    doFirst {
        manifest {
                attributes(
                        // 'Class-Path': configurations.compile.collect{it.toURI().toString()}.join(' '),
                        'Main-Class': 'com.sap.fontus.Main',
                        'Agent-Class': 'com.sap.fontus.agent.TaintAgent',
                        'Can-Redefine-Classes': true,
                        'Can-Retransform-Classes': true,
                        'Premain-Class': 'com.sap.fontus.agent.TaintAgent'
                )
        }
    }

    // This makes sure that the generated jar has no "-all" suffix
    classifier = ''

      dependsOn relocateShadowJar
//    dependsOn converterJar
//    dependsOn generatorJar
//    dependsOn aotJar
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from subprojects.collect { it.sourceSets.main.allSource }
}

shadowJar.finalizedBy sourcesJar

publishing {
    publications {
        shadow(MavenPublication) {
            from project.components.java
            groupId = 'com.sap.fontus'
            artifactId = 'fontus'
            version = '0.0.1-SNAPSHOT'
            artifact tasks.sourcesJar
            artifact tasks.shadowJar
        }
    }
}
